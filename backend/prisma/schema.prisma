// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  PATIENT
  ADMIN
  DOCTOR
}

enum AppointmentStatus {
  BOOKED
  CANCELED
  COMPLETED
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(PATIENT)
  createdAt DateTime  @default(now())
  // If user is doctor, we can link to Doctor table (one-to-one)
  doctor    Doctor?   @relation("UserDoctor")
  doctorId  Int?
  appointments Appointment[] @relation("PatientAppointments")
}

model Doctor {
  id          Int       @id @default(autoincrement())
  name        String
  specialization String
  description String?
  imageUrl    String?
  // clinic hours / availability could be stored separately or as a JSON string
  availability String? 
  createdAt   DateTime  @default(now())
  userId      Int? @unique
  // link to User account (optional)
  user        User?     @relation("UserDoctor", fields: [userId], references: [id])
  appointments Appointment[] @relation("DoctorAppointments")
}

model Appointment {
  id                  Int               @id @default(autoincrement())
  patient             User              @relation("PatientAppointments", fields: [patientId], references: [id])
  patientId           Int
  doctor              Doctor            @relation("DoctorAppointments", fields: [doctorId], references: [id])
  doctorId            Int
  appointmentDateTime DateTime
  reason              String?
  status              AppointmentStatus @default(BOOKED)
  createdAt           DateTime          @default(now())
  updatedAt           DateTime?         
}
